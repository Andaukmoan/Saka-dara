name: Create CellProfiler Releases
jobs:
  build-cp:
    name: Build CellProfiler
    strategy:
      matrix:
        os: [macos-10.15, windows-2019]
        python-version: ["3.8"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Windows - Cache pip
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Mac - Cache pip
        if: ${{ matrix.os == 'macos-10.15' }}
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: ${{ matrix.python-version }}
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11" # The JDK version to make available on the path.
          java-package: jdk
          architecture: x64
      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install numpy~=1.24.4
          pip install pyinstaller==4.10
          git clone https://github.com/CellProfiler/distribution.git
      - name: Mac - Build
        if: ${{ matrix.os == 'macos-10.15' }}
        env:
          LDFLAGS: -L/usr/local/opt/openssl/lib
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.BUILD_CERTIFICATE_BASE64_CIMINI }}
          CERTIFICATE_PASSWORD: ${{ secrets.P12_PASSWORD_CIMINI }}
        run: |
          sed -i '' 's/4.0.0/4.2.4/' Info.plist
          brew install mysql
          make
          chmod +x add-osx-certificate.sh && ./add-osx-certificate.sh
          chmod +x osx-codesign.sh && ./osx-codesign.sh
          ditto -ck --keepParent --rsrc --sequesterRsrc ./dist/CellProfiler.app ./dist/CellProfiler-macOS-4.2.4.zip
        working-directory: ./distribution/macos
      - name: Windows - Build
        if: ${{ matrix.os == 'windows-2019' }}
        env:
          JDK_HOME: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\11.0.16-8\x64
        # cython necessary?
        run: |
          pip install "cython" 
          pip install mysqlclient==1.4.6
          pip install --editable src/frontend --no-use-pep517
          pyinstaller distribution/windows/cellprofiler.spec
          iscc /dMyAppVersion="4.2.4" "distribution/windows/cellprofiler.iss"
      - name: Mac - Create Artifact
        if: ${{ matrix.os == 'macos-10.15' }}
        uses: actions/upload-artifact@v1
        with:
          name: CellProfiler-macOS-4.2.4.zip
          path: ./distribution/macos/dist/CellProfiler-macOS-4.2.4.zip
      - name: Windows - Create Artifact
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v2
        with:
          name: CellProfiler-Windows-4.2.4.exe
          path: ./distribution/windows/Output/CellProfiler-Windows-4.2.4.exe

  upload-cp:
    name: Upload CellProfiler
    needs: build-cp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: true
          prerelease: true
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
      - name: Download Mac Artifact
        uses: actions/download-artifact@v1
        with:
          name: CellProfiler-macOS-4.2.4.zip
          path: ./
      - name: Download Windows Artifact
        uses: actions/download-artifact@v1
        with:
          name: CellProfiler-Windows-4.2.4.exe
          path: ./
      - name: Upload Mac Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1
        with:
          asset_content_type: application/zip
          asset_name: CellProfiler-macOS-4.2.4.zip
          asset_path: /home/runner/work/CellProfiler/CellProfiler/CellProfiler-macOS-4.2.4.zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - name: Upload Windows Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-release-asset@v1
        with:
          asset_content_type: application/exe
          asset_name: CellProfiler-Windows-4.2.4.exe
          asset_path: /home/runner/work/CellProfiler/CellProfiler/CellProfiler-Windows-4.2.4.exe
          upload_url: ${{ steps.create_release.outputs.upload_url }}
on:
  push:
    tags:
      - "v*"
